{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\laboratory\\\\news-front\\\\src\\\\component\\\\TagsList.jsx\";\nimport React from 'react';\nimport TagDataService from './TagDataService';\n\nclass TagsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getAllTagsCallback = this.getAllTagsCallback.bind(this);\n    this.createTagCallback = this.createTagCallback.bind(this);\n    this.state = {\n      tags: []\n    };\n  }\n\n  componentDidMount() {\n    this.refreshTags();\n  }\n\n  refreshTags() {\n    TagDataService.getAllTags(this.getAllTagsCallback);\n  }\n\n  createTag() {\n    let newTagName = document.getElementById(\"newTagField\").value;\n    let newTag = {\n      id: null,\n      name: newTagName\n    };\n    console.log(newTag);\n    TagDataService.createTag(this.createTagCallback, newTag);\n  }\n\n  saveChangedTag(tagId) {\n    let tagName = document.getElementById(\"newTagField\" + tagId).value;\n    let tag = {\n      id: tagId,\n      name: tagName\n    };\n    TagDataService.editTag(this.saveChangedTagCallback, tag);\n  }\n\n  getAllTagsCallback(result) {\n    this.setState({\n      tags: result\n    });\n  }\n\n  createTagCallback(result) {\n    document.getElementById(\"newTagField\").value = \"\";\n    this.refreshTags();\n  }\n\n  saveChangedTagCallback(result) {\n    window.location.href = \"/tags/edit/\";\n  }\n\n  render() {\n    const func = this.state.tags.map(tag => {\n      return React.createElement(\"div\", {\n        className: \"row my-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"tagNameField\" + tag.id,\n        className: \"form-control\",\n        type: \"text\",\n        defaultValue: tag.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-primary btn-block mx-1\",\n        onClick: () => saveChangedTag(tag.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Save changes\")), React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-danger btn-block mx-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Delete tag\")), React.createElement(\"div\", {\n        className: \"col-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group mb-3 w-100 my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"newTagField\",\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"New tag name\",\n      \"aria-describedby\": \"button-addon2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-success btn-sm\",\n      type: \"button\",\n      id: \"add-tags-button\",\n      onClick: () => this.createTag(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Add tag\"))), func), React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default TagsList;","map":{"version":3,"sources":["C:/git/laboratory/news-front/src/component/TagsList.jsx"],"names":["React","TagDataService","TagsList","Component","constructor","props","getAllTagsCallback","bind","createTagCallback","state","tags","componentDidMount","refreshTags","getAllTags","createTag","newTagName","document","getElementById","value","newTag","id","name","console","log","saveChangedTag","tagId","tagName","tag","editTag","saveChangedTagCallback","result","setState","window","location","href","render","func","map"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport TagDataService from './TagDataService'\r\n\r\nclass TagsList extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.getAllTagsCallback = this.getAllTagsCallback.bind(this);\r\n        this.createTagCallback = this.createTagCallback.bind(this);\r\n        this.state = {\r\n            tags:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshTags();\r\n    }\r\n\r\n    refreshTags(){\r\n        TagDataService.getAllTags(this.getAllTagsCallback);\r\n    }\r\n\r\n    createTag(){\r\n        let newTagName = document.getElementById(\"newTagField\").value;\r\n        let newTag ={id: null, name: newTagName}; \r\n        console.log(newTag);\r\n        TagDataService.createTag(this.createTagCallback, newTag);\r\n    }\r\n\r\n    saveChangedTag(tagId){\r\n        let tagName = document.getElementById(\"newTagField\" + tagId).value;\r\n        let tag = {id: tagId, name: tagName};\r\n        TagDataService.editTag(this.saveChangedTagCallback, tag);\r\n    }\r\n\r\n    getAllTagsCallback(result){\r\n        this.setState({tags: result});\r\n    }\r\n\r\n    createTagCallback(result){\r\n        document.getElementById(\"newTagField\").value = \"\";\r\n        this.refreshTags();\r\n    }\r\n\r\n    saveChangedTagCallback(result){\r\n        window.location.href = \"/tags/edit/\";\r\n    }\r\n\r\n    render(){\r\n        const func = this.state.tags.map(tag => {\r\n            return(\r\n                <div className=\"row my-1\">\r\n                    <div className=\"col-1\"></div>\r\n                    <div className=\"col-6\">\r\n                        <input id={\"tagNameField\" + tag.id} className=\"form-control\"  type=\"text\" defaultValue={tag.name}/>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <button type=\"button\" className=\"btn btn-outline-primary btn-block mx-1\" onClick={() => saveChangedTag(tag.id)}>Save changes</button>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <button type=\"button\" className=\"btn btn-outline-danger btn-block mx-1\" >Delete tag</button>\r\n                    </div>\r\n                    <div className=\"col-1\"></div>\r\n                </div>\r\n            )\r\n        })  \r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-1\"></div>\r\n                    <div className=\"col-10\">\r\n                    <div className=\"input-group mb-3 w-100 my-3\">\r\n                        <input id=\"newTagField\" type=\"text\" className=\"form-control\" placeholder=\"New tag name\" aria-describedby=\"button-addon2\"/>\r\n                        <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-success btn-sm\" type=\"button\" id=\"add-tags-button\" onClick={() => this.createTag()}>Add tag</button>\r\n                        </div>\r\n                    </div>\r\n \r\n                    {func}\r\n\r\n                    </div>\r\n                    <div className=\"col-1\"></div>\r\n                </div>\r\n                \r\n       \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TagsList\r\n"]},"metadata":{},"sourceType":"module"}