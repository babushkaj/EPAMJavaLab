{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\laboratory\\\\news-front\\\\src\\\\component\\\\AuthorsList.jsx\";\nimport React from 'react';\nimport AuthorDataService from './AuthorDataService';\n\nclass AuthorsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authors: []\n    };\n  }\n\n  componentDidMount() {\n    this.refreshAuthors();\n  }\n\n  refreshAuthors() {\n    AuthorDataService.getAllAuthors().then(response => {\n      this.setState({\n        authors: response.data\n      });\n    });\n  }\n\n  createAuthor() {\n    let errorsExist = this.nameSurnameErrorRender();\n\n    if (errorsExist > 0) {\n      return;\n    }\n\n    let newAuthorName = document.getElementById(\"newAuthorNameField\").value;\n    let newAuthorSurname = document.getElementById(\"newAuthorSurnameField\").value;\n    let newAuthor = {\n      id: null,\n      name: newAuthorName,\n      surname: newAuthorSurname\n    };\n    AuthorDataService.createAuthor(newAuthor).then(response => {\n      document.getElementById(\"newAuthorNameField\").value = \"\";\n      document.getElementById(\"newAuthorSurnameField\").value = \"\";\n      this.refreshAuthors();\n    });\n  }\n\n  saveChangedAuthor(authorId) {\n    let authorName = document.getElementById(\"authorNameField\" + authorId).value;\n    let authorSurname = document.getElementById(\"authorSurnameField\" + authorId).value;\n    let author = {\n      id: authorId,\n      name: authorName,\n      surname: authorSurname\n    };\n    AuthorDataService.editAuthor(author).then(response => {\n      this.refreshAuthors();\n    });\n  }\n\n  deleteAuthor(id) {\n    AuthorDataService.deleteAuthor(id).then(response => {\n      this.refreshAuthors();\n    });\n  }\n\n  cleanErrorMessage(errorFieldId) {\n    let previousErrorMessage = document.getElementById(errorFieldId);\n\n    if (previousErrorMessage) {\n      previousErrorMessage.remove();\n    }\n  }\n\n  validateAuthorName(value) {\n    let errorMessage = \"\";\n\n    if (!value) {\n      errorMessage = this.props.t(\"author_name_surname_mustnt_be_empty\");\n    } else if (value.length > 30) {\n      errorMessage = this.props.t(\"author_name_surname_mustnt_be_larger_than_30_characters\");\n    }\n\n    return errorMessage;\n  }\n\n  createErrorField(fieldId, errorMessage, afterElementId) {\n    let small = document.createElement('small');\n    small.id = fieldId;\n    small.className = \"text-danger\";\n    small.innerText = errorMessage;\n    let fieldSet = document.getElementById(afterElementId);\n    fieldSet.after(small);\n  }\n\n  nameSurnameErrorRender() {\n    let errorsExist = 0;\n    this.cleanErrorMessage(\"authorNameErrorMessage\");\n    this.cleanErrorMessage(\"authorSurnameErrorMessage\");\n    let newAuthorName = document.getElementById(\"newAuthorNameField\").value;\n    let newAuthorSurname = document.getElementById(\"newAuthorSurnameField\").value;\n    let errorMessage1 = this.validateAuthorName(newAuthorName);\n    let errorMessage2 = this.validateAuthorName(newAuthorSurname);\n\n    if (errorMessage1) {\n      this.createErrorField(\"authorNameErrorMessage\", errorMessage1, \"newAuthorInputGroup\");\n      errorsExist++;\n    }\n\n    if (errorMessage2) {\n      this.createErrorField(\"authorSurnameErrorMessage\", errorMessage2, \"newAuthorInputGroup\");\n      errorsExist++;\n    }\n\n    return errorsExist;\n  }\n\n  handleEditingName(index, inputValue) {\n    const authorsArrToChage = this.state.authors.slice();\n    authorsArrToChage[index].name = inputValue;\n    this.setState({\n      authors: authorsArrToChage\n    });\n  }\n\n  handleEditingSurname(index, inputValue) {\n    const authorsArrToChage = this.state.authors.slice();\n    authorsArrToChage[index].surname = inputValue;\n    this.setState({\n      authors: authorsArrToChage\n    });\n  }\n\n  render() {\n    const renderAuthorsList = this.state.authors.map((author, index) => {\n      return React.createElement(\"div\", {\n        className: \"row my-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"authorNameField\" + author.id,\n        className: \"form-control\",\n        type: \"text\",\n        value: author.name,\n        onChange: e => this.handleEditingName(index, e.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"authorSurnameField\" + author.id,\n        className: \"form-control\",\n        type: \"text\",\n        value: author.surname,\n        onChange: e => this.handleEditingName(index, e.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-primary btn-block mx-1\",\n        onClick: () => this.saveChangedAuthor(author.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.props.t(\"save\"))), React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-danger btn-block mx-1\",\n        onClick: () => this.deleteAuthor(author.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.props.t(\"delete\"))), React.createElement(\"div\", {\n        className: \"col-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"newAuthorInputGroup\",\n      className: \"input-group mb-3 w-100 my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"newAuthorNameField\",\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: this.props.t(\"new_author_name\"),\n      \"aria-describedby\": \"button-addon2\",\n      onFocus: () => this.cleanErrorMessage(\"authorNameErrorMessage\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"newAuthorSurnameField\",\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: this.props.t(\"new_author_surname\"),\n      \"aria-describedby\": \"button-addon2\",\n      onFocus: () => this.cleanErrorMessage(\"authorSurnameErrorMessage\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-success btn-sm\",\n      type: \"button\",\n      id: \"add-tags-button\",\n      onClick: () => this.createAuthor(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.props.t(\"add\")))), renderAuthorsList), React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AuthorsList;","map":{"version":3,"sources":["C:/git/laboratory/news-front/src/component/AuthorsList.jsx"],"names":["React","AuthorDataService","AuthorsList","Component","constructor","props","state","authors","componentDidMount","refreshAuthors","getAllAuthors","then","response","setState","data","createAuthor","errorsExist","nameSurnameErrorRender","newAuthorName","document","getElementById","value","newAuthorSurname","newAuthor","id","name","surname","saveChangedAuthor","authorId","authorName","authorSurname","author","editAuthor","deleteAuthor","cleanErrorMessage","errorFieldId","previousErrorMessage","remove","validateAuthorName","errorMessage","t","length","createErrorField","fieldId","afterElementId","small","createElement","className","innerText","fieldSet","after","errorMessage1","errorMessage2","handleEditingName","index","inputValue","authorsArrToChage","slice","handleEditingSurname","render","renderAuthorsList","map","e","target"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAC;AADC,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,cAAL;AACH;;AAEDA,EAAAA,cAAc,GAAE;AACZR,IAAAA,iBAAiB,CAACS,aAAlB,GACCC,IADD,CAEIC,QAAQ,IAAI;AACR,WAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAEK,QAAQ,CAACE;AAAnB,OAAd;AACH,KAJL;AAMH;;AAEDC,EAAAA,YAAY,GAAE;AAEV,QAAIC,WAAW,GAAG,KAAKC,sBAAL,EAAlB;;AACA,QAAGD,WAAW,GAAG,CAAjB,EAAmB;AACf;AACH;;AAED,QAAIE,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,KAAlE;AACA,QAAIC,gBAAgB,GAAGH,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EAAiDC,KAAxE;AAEA,QAAIE,SAAS,GAAE;AAACC,MAAAA,EAAE,EAAE,IAAL;AAAWC,MAAAA,IAAI,EAAEP,aAAjB;AAAgCQ,MAAAA,OAAO,EAAEJ;AAAzC,KAAf;AAEArB,IAAAA,iBAAiB,CAACc,YAAlB,CAA+BQ,SAA/B,EACCZ,IADD,CAEIC,QAAQ,IAAI;AACRO,MAAAA,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,KAA9C,GAAsD,EAAtD;AACAF,MAAAA,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EAAiDC,KAAjD,GAAyD,EAAzD;AACA,WAAKZ,cAAL;AACH,KANL;AAQH;;AAEDkB,EAAAA,iBAAiB,CAACC,QAAD,EAAU;AACvB,QAAIC,UAAU,GAAGV,QAAQ,CAACC,cAAT,CAAwB,oBAAoBQ,QAA5C,EAAsDP,KAAvE;AACA,QAAIS,aAAa,GAAGX,QAAQ,CAACC,cAAT,CAAwB,uBAAuBQ,QAA/C,EAAyDP,KAA7E;AACA,QAAIU,MAAM,GAAE;AAACP,MAAAA,EAAE,EAAEI,QAAL;AAAeH,MAAAA,IAAI,EAAEI,UAArB;AAAiCH,MAAAA,OAAO,EAAEI;AAA1C,KAAZ;AACA7B,IAAAA,iBAAiB,CAAC+B,UAAlB,CAA6BD,MAA7B,EACCpB,IADD,CAEIC,QAAQ,IAAI;AACR,WAAKH,cAAL;AACH,KAJL;AAMH;;AAEDwB,EAAAA,YAAY,CAACT,EAAD,EAAI;AACZvB,IAAAA,iBAAiB,CAACgC,YAAlB,CAA+BT,EAA/B,EACCb,IADD,CAEIC,QAAQ,IAAI;AACR,WAAKH,cAAL;AACH,KAJL;AAMH;;AAEDyB,EAAAA,iBAAiB,CAACC,YAAD,EAAc;AAC3B,QAAIC,oBAAoB,GAAGjB,QAAQ,CAACC,cAAT,CAAwBe,YAAxB,CAA3B;;AACA,QAAIC,oBAAJ,EAA0B;AACtBA,MAAAA,oBAAoB,CAACC,MAArB;AACH;AACJ;;AAEDC,EAAAA,kBAAkB,CAACjB,KAAD,EAAQ;AACtB,QAAIkB,YAAY,GAAG,EAAnB;;AACA,QAAI,CAAClB,KAAL,EAAY;AACRkB,MAAAA,YAAY,GAAG,KAAKlC,KAAL,CAAWmC,CAAX,CAAa,qCAAb,CAAf;AACH,KAFD,MAEO,IAAInB,KAAK,CAACoB,MAAN,GAAe,EAAnB,EAAuB;AAC1BF,MAAAA,YAAY,GAAG,KAAKlC,KAAL,CAAWmC,CAAX,CAAa,yDAAb,CAAf;AACH;;AACD,WAAOD,YAAP;AACH;;AAEDG,EAAAA,gBAAgB,CAACC,OAAD,EAAUJ,YAAV,EAAwBK,cAAxB,EAAwC;AACpD,QAAIC,KAAK,GAAG1B,QAAQ,CAAC2B,aAAT,CAAuB,OAAvB,CAAZ;AACAD,IAAAA,KAAK,CAACrB,EAAN,GAAWmB,OAAX;AACAE,IAAAA,KAAK,CAACE,SAAN,GAAkB,aAAlB;AACAF,IAAAA,KAAK,CAACG,SAAN,GAAkBT,YAAlB;AACA,QAAIU,QAAQ,GAAG9B,QAAQ,CAACC,cAAT,CAAwBwB,cAAxB,CAAf;AACAK,IAAAA,QAAQ,CAACC,KAAT,CAAeL,KAAf;AACH;;AAED5B,EAAAA,sBAAsB,GAAE;AACpB,QAAID,WAAW,GAAG,CAAlB;AAEA,SAAKkB,iBAAL,CAAuB,wBAAvB;AACA,SAAKA,iBAAL,CAAuB,2BAAvB;AACA,QAAIhB,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,KAAlE;AACA,QAAIC,gBAAgB,GAAGH,QAAQ,CAACC,cAAT,CAAwB,uBAAxB,EAAiDC,KAAxE;AAEA,QAAI8B,aAAa,GAAG,KAAKb,kBAAL,CAAwBpB,aAAxB,CAApB;AACA,QAAIkC,aAAa,GAAG,KAAKd,kBAAL,CAAwBhB,gBAAxB,CAApB;;AAEA,QAAI6B,aAAJ,EAAmB;AACf,WAAKT,gBAAL,CAAsB,wBAAtB,EAAgDS,aAAhD,EAA+D,qBAA/D;AACAnC,MAAAA,WAAW;AACd;;AAED,QAAIoC,aAAJ,EAAmB;AACf,WAAKV,gBAAL,CAAsB,2BAAtB,EAAmDU,aAAnD,EAAkE,qBAAlE;AACApC,MAAAA,WAAW;AACd;;AAED,WAAOA,WAAP;AACH;;AAEDqC,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,UAAR,EAAmB;AAChC,UAAMC,iBAAiB,GAAG,KAAKlD,KAAL,CAAWC,OAAX,CAAmBkD,KAAnB,EAA1B;AACAD,IAAAA,iBAAiB,CAACF,KAAD,CAAjB,CAAyB7B,IAAzB,GAAgC8B,UAAhC;AACA,SAAK1C,QAAL,CAAc;AAACN,MAAAA,OAAO,EAAEiD;AAAV,KAAd;AACH;;AAEDE,EAAAA,oBAAoB,CAACJ,KAAD,EAAQC,UAAR,EAAmB;AACnC,UAAMC,iBAAiB,GAAG,KAAKlD,KAAL,CAAWC,OAAX,CAAmBkD,KAAnB,EAA1B;AACAD,IAAAA,iBAAiB,CAACF,KAAD,CAAjB,CAAyB5B,OAAzB,GAAmC6B,UAAnC;AACA,SAAK1C,QAAL,CAAc;AAACN,MAAAA,OAAO,EAAEiD;AAAV,KAAd;AACH;;AAEDG,EAAAA,MAAM,GAAE;AAEJ,UAAMC,iBAAiB,GAAG,KAAKtD,KAAL,CAAWC,OAAX,CAAmBsD,GAAnB,CAAuB,CAAC9B,MAAD,EAASuB,KAAT,KAAmB;AAChE,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,EAAE,EAAE,oBAAoBvB,MAAM,CAACP,EAAtC;AAA0C,QAAA,SAAS,EAAC,cAApD;AAAoE,QAAA,IAAI,EAAC,MAAzE;AAAgF,QAAA,KAAK,EAAEO,MAAM,CAACN,IAA9F;AAAoG,QAAA,QAAQ,EAAGqC,CAAD,IAAO,KAAKT,iBAAL,CAAuBC,KAAvB,EAA8BQ,CAAC,CAACC,MAAF,CAAS1C,KAAvC,CAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,EAKI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,EAAE,EAAE,uBAAuBU,MAAM,CAACP,EAAzC;AAA6C,QAAA,SAAS,EAAC,cAAvD;AAAuE,QAAA,IAAI,EAAC,MAA5E;AAAmF,QAAA,KAAK,EAAEO,MAAM,CAACL,OAAjG;AAA0G,QAAA,QAAQ,EAAGoC,CAAD,IAAO,KAAKT,iBAAL,CAAuBC,KAAvB,EAA8BQ,CAAC,CAACC,MAAF,CAAS1C,KAAvC,CAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,EAQI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wCAAhC;AAAyE,QAAA,OAAO,EAAE,MAAM,KAAKM,iBAAL,CAAuBI,MAAM,CAACP,EAA9B,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4H,KAAKnB,KAAL,CAAWmC,CAAX,CAAa,MAAb,CAA5H,CADJ,CARJ,EAWI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,uCAAhC;AAAwE,QAAA,OAAO,EAAE,MAAM,KAAKP,YAAL,CAAkBF,MAAM,CAACP,EAAzB,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsH,KAAKnB,KAAL,CAAWmC,CAAX,CAAa,QAAb,CAAtH,CADJ,CAXJ,EAcI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CADJ;AAkBH,KAnByB,CAA1B;AAqBA,WAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,EAAE,EAAC,qBAAR;AAA8B,MAAA,SAAS,EAAC,6BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,oBAAV;AAA+B,MAAA,IAAI,EAAC,MAApC;AAA2C,MAAA,SAAS,EAAC,cAArD;AAAoE,MAAA,WAAW,EAAE,KAAKnC,KAAL,CAAWmC,CAAX,CAAa,iBAAb,CAAjF;AAAkH,0BAAiB,eAAnI;AAAmJ,MAAA,OAAO,EAAE,MAAM,KAAKN,iBAAL,CAAuB,wBAAvB,CAAlK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,EAAE,EAAC,uBAAV;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAA8C,MAAA,SAAS,EAAC,cAAxD;AAAuE,MAAA,WAAW,EAAE,KAAK7B,KAAL,CAAWmC,CAAX,CAAa,oBAAb,CAApF;AAAwH,0BAAiB,eAAzI;AAAyJ,MAAA,OAAO,EAAE,MAAM,KAAKN,iBAAL,CAAuB,2BAAvB,CAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,gCAAlB;AAAmD,MAAA,IAAI,EAAC,QAAxD;AAAiE,MAAA,EAAE,EAAC,iBAApE;AAAsF,MAAA,OAAO,EAAE,MAAM,KAAKnB,YAAL,EAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2H,KAAKV,KAAL,CAAWmC,CAAX,CAAa,KAAb,CAA3H,CADJ,CAHJ,CADA,EASCoB,iBATD,CAFJ,EAcI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,CADA,CAFJ;AAyBH;;AA/KoC;;AAkLzC,eAAe1D,WAAf","sourcesContent":["import React from 'react'\r\n\r\nimport AuthorDataService from './AuthorDataService'\r\n\r\nclass AuthorsList extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            authors:[],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshAuthors();\r\n    }\r\n\r\n    refreshAuthors(){\r\n        AuthorDataService.getAllAuthors()\r\n        .then(\r\n            response => {\r\n                this.setState({authors: response.data});\r\n            }\r\n        )\r\n    }\r\n\r\n    createAuthor(){\r\n\r\n        let errorsExist = this.nameSurnameErrorRender();\r\n        if(errorsExist > 0){\r\n            return;\r\n        }\r\n\r\n        let newAuthorName = document.getElementById(\"newAuthorNameField\").value;\r\n        let newAuthorSurname = document.getElementById(\"newAuthorSurnameField\").value;\r\n\r\n        let newAuthor ={id: null, name: newAuthorName, surname: newAuthorSurname}; \r\n\r\n        AuthorDataService.createAuthor(newAuthor)\r\n        .then(\r\n            response => {\r\n                document.getElementById(\"newAuthorNameField\").value = \"\";\r\n                document.getElementById(\"newAuthorSurnameField\").value = \"\";\r\n                this.refreshAuthors();\r\n            }\r\n        )\r\n    }\r\n\r\n    saveChangedAuthor(authorId){\r\n        let authorName = document.getElementById(\"authorNameField\" + authorId).value;\r\n        let authorSurname = document.getElementById(\"authorSurnameField\" + authorId).value;\r\n        let author ={id: authorId, name: authorName, surname: authorSurname}; \r\n        AuthorDataService.editAuthor(author)\r\n        .then(\r\n            response => {\r\n                this.refreshAuthors();\r\n            }\r\n        )\r\n    }\r\n\r\n    deleteAuthor(id){\r\n        AuthorDataService.deleteAuthor(id)\r\n        .then(\r\n            response => {\r\n                this.refreshAuthors();\r\n            }\r\n        )\r\n    }\r\n\r\n    cleanErrorMessage(errorFieldId){\r\n        let previousErrorMessage = document.getElementById(errorFieldId);\r\n        if (previousErrorMessage) {\r\n            previousErrorMessage.remove();\r\n        }\r\n    }\r\n\r\n    validateAuthorName(value) {\r\n        let errorMessage = \"\";\r\n        if (!value) {\r\n            errorMessage = this.props.t(\"author_name_surname_mustnt_be_empty\");\r\n        } else if (value.length > 30) {\r\n            errorMessage = this.props.t(\"author_name_surname_mustnt_be_larger_than_30_characters\");\r\n        } \r\n        return errorMessage;\r\n    }\r\n\r\n    createErrorField(fieldId, errorMessage, afterElementId) {\r\n        let small = document.createElement('small');\r\n        small.id = fieldId;\r\n        small.className = \"text-danger\";\r\n        small.innerText = errorMessage;\r\n        let fieldSet = document.getElementById(afterElementId);\r\n        fieldSet.after(small);\r\n    }\r\n\r\n    nameSurnameErrorRender(){\r\n        let errorsExist = 0;\r\n\r\n        this.cleanErrorMessage(\"authorNameErrorMessage\");\r\n        this.cleanErrorMessage(\"authorSurnameErrorMessage\");\r\n        let newAuthorName = document.getElementById(\"newAuthorNameField\").value;\r\n        let newAuthorSurname = document.getElementById(\"newAuthorSurnameField\").value;\r\n        \r\n        let errorMessage1 = this.validateAuthorName(newAuthorName);\r\n        let errorMessage2 = this.validateAuthorName(newAuthorSurname);\r\n\r\n        if (errorMessage1) {\r\n            this.createErrorField(\"authorNameErrorMessage\", errorMessage1, \"newAuthorInputGroup\");\r\n            errorsExist++;\r\n        }\r\n\r\n        if (errorMessage2) {\r\n            this.createErrorField(\"authorSurnameErrorMessage\", errorMessage2, \"newAuthorInputGroup\");\r\n            errorsExist++;\r\n        }\r\n\r\n        return errorsExist;\r\n    } \r\n\r\n    handleEditingName(index, inputValue){\r\n        const authorsArrToChage = this.state.authors.slice();\r\n        authorsArrToChage[index].name = inputValue;\r\n        this.setState({authors: authorsArrToChage});\r\n    }\r\n\r\n    handleEditingSurname(index, inputValue){\r\n        const authorsArrToChage = this.state.authors.slice();\r\n        authorsArrToChage[index].surname = inputValue;\r\n        this.setState({authors: authorsArrToChage});\r\n    }\r\n\r\n    render(){\r\n\r\n        const renderAuthorsList = this.state.authors.map((author, index) => {\r\n            return(\r\n                <div className=\"row my-1\">\r\n                    <div className=\"col-1\"></div>\r\n                    <div className=\"col-3\">\r\n                        <input id={\"authorNameField\" + author.id} className=\"form-control\"  type=\"text\" value={author.name} onChange={(e) => this.handleEditingName(index, e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <input id={\"authorSurnameField\" + author.id} className=\"form-control\"  type=\"text\" value={author.surname} onChange={(e) => this.handleEditingName(index, e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <button type=\"button\" className=\"btn btn-outline-primary btn-block mx-1\" onClick={() => this.saveChangedAuthor(author.id)}>{this.props.t(\"save\")}</button>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <button type=\"button\" className=\"btn btn-outline-danger btn-block mx-1\" onClick={() => this.deleteAuthor(author.id)}>{this.props.t(\"delete\")}</button>\r\n                    </div>\r\n                    <div className=\"col-1\"></div>\r\n                </div>\r\n            )\r\n        }); \r\n\r\n        return(\r\n\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-10\">\r\n                <div id=\"newAuthorInputGroup\" className=\"input-group mb-3 w-100 my-3\">\r\n                    <input id=\"newAuthorNameField\" type=\"text\" className=\"form-control\" placeholder={this.props.t(\"new_author_name\")} aria-describedby=\"button-addon2\" onFocus={() => this.cleanErrorMessage(\"authorNameErrorMessage\")}/>\r\n                    <input id=\"newAuthorSurnameField\" type=\"text\" className=\"form-control\" placeholder={this.props.t(\"new_author_surname\")} aria-describedby=\"button-addon2\" onFocus={() => this.cleanErrorMessage(\"authorSurnameErrorMessage\")}/>\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-outline-success btn-sm\" type=\"button\" id=\"add-tags-button\" onClick={() => this.createAuthor()}>{this.props.t(\"add\")}</button>\r\n                    </div>\r\n                </div>\r\n\r\n                {renderAuthorsList}\r\n\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n            </div>\r\n            \r\n   \r\n            \r\n        </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthorsList"]},"metadata":{},"sourceType":"module"}