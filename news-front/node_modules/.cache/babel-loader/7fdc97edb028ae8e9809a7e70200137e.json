{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\laboratory\\\\news-front\\\\src\\\\component\\\\NewsEditForm.jsx\";\nimport React from 'react';\nimport NewsDataService from './NewsDataService';\nimport TagDataService from './TagDataService';\nimport AuthorDataService from './AuthorDataService';\nimport TagButton from './TagButton';\n\nclass NewsEditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newsId: {},\n      newsTitle: '',\n      newsShortText: '',\n      newsFullText: '',\n      creationDate: '',\n      author: {},\n      tags: [],\n      allTags: [],\n      allAuthors: []\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.id > 0) {\n      this.refreshNews(this.props.match.params.id);\n    }\n\n    this.refreshAuthorsList();\n    this.refreshTagsList();\n  }\n\n  refreshNews(id) {\n    NewsDataService.getNewsById(id).then(response => {\n      this.setState({\n        newsId: response.data.id\n      });\n      this.setState({\n        newsTitle: response.data.title\n      });\n      this.setState({\n        newsShortText: response.data.shortText\n      });\n      this.setState({\n        newsFullText: response.data.fullText\n      });\n      this.setState({\n        creationDate: response.data.creationDate\n      });\n      this.setState({\n        author: response.data.author\n      });\n      this.setState({\n        tags: response.data.tags\n      });\n    });\n  }\n\n  refreshTagsList() {\n    TagDataService.getAllTags().then(response => {\n      this.setState({\n        allTags: response.data\n      });\n    });\n  }\n\n  refreshAuthorsList() {\n    AuthorDataService.getAllAuthors().then(response => {\n      this.setState({\n        allAuthors: response.data\n      });\n    });\n  }\n\n  editNews() {\n    let news = this.buildNewsObjectFromFormFieldsAndState();\n\n    if (this.state.newsId > 0) {\n      NewsDataService.editNews(news).then(response => {\n        window.location.href = \"/news/edit/\" + response.data.id;\n      });\n    } else {\n      console.log(news);\n      console.log(news.title);\n      console.log(news.shortText);\n      console.log(news.fullText);\n      console.log(news.tags);\n      NewsDataService.createNews(news).then(response => {\n        window.location.href = \"/news/edit/\" + response.data.id;\n      });\n    }\n  }\n\n  deleteTagFromState(tagName) {\n    let stateTagsArray = [];\n    stateTagsArray = this.state.tags;\n\n    for (var k = 0; k < stateTagsArray.length; k++) {\n      if (stateTagsArray[k].name === tagName) {\n        stateTagsArray.splice(k, 1);\n        break;\n      }\n    }\n\n    this.setState({\n      tags: stateTagsArray\n    });\n  }\n\n  setNewTagsToState() {\n    let stateTagsArray = [];\n    stateTagsArray = this.state.tags;\n    let newTagFieldValue = document.getElementById(\"newTagField\").value;\n    let selectTagFieldValue = document.getElementById(\"tag-select-field\").childNodes;\n\n    for (var i = 0; i < selectTagFieldValue.length; i++) {\n      if (selectTagFieldValue[i].selected) {\n        var containsInState = false;\n\n        for (var j = 0; j < stateTagsArray.length; j++) {\n          if (stateTagsArray[j].name === selectTagFieldValue[i].textContent) {\n            containsInState = true;\n            break;\n          }\n        }\n\n        if (!containsInState) {\n          stateTagsArray.push({\n            name: selectTagFieldValue[i].textContent\n          });\n        }\n\n        containsInState = false;\n      }\n    }\n\n    var thisTagContainsInState = false;\n\n    for (var k = 0; k < stateTagsArray.length; k++) {\n      if (stateTagsArray[k].name === newTagFieldValue) {\n        thisTagContainsInState = true;\n        break;\n      }\n    }\n\n    if (newTagFieldValue.length !== 0 && !thisTagContainsInState) {\n      stateTagsArray.push({\n        id: null,\n        name: newTagFieldValue\n      });\n    }\n\n    for (var i = 0; i < selectTagFieldValue.length; i++) {\n      if (selectTagFieldValue[i].selected) {\n        selectTagFieldValue[i].selected = false;\n      }\n    }\n\n    this.setState({\n      tags: stateTagsArray\n    });\n  }\n\n  buildNewsObjectFromFormFieldsAndState() {\n    let formTitle = document.getElementById(\"newsTitleField\").value;\n    let formShortText = document.getElementById(\"newsShortTextField\").value;\n    let formFullText = document.getElementById(\"newsFullTextField\").value;\n    let selectedAuthor = {};\n    let selectAuthorFieldValue = document.getElementById(\"authorsSelectField\").childNodes;\n\n    for (var i = 0; i < selectAuthorFieldValue.length; i++) {\n      if (selectAuthorFieldValue[i].selected) {\n        selectedAuthor = {\n          id: selectAuthorFieldValue[i].value,\n          name: null,\n          surname: null\n        };\n      }\n    }\n\n    var newsObject = {};\n\n    if (this.state.newsId < 0) {\n      newsObject = {\n        title: formTitle,\n        shortText: formShortText,\n        fullText: formFullText,\n        creationDate: this.state.creationDate,\n        //   author: this.state.author,\n        author: selectedAuthor,\n        tags: this.state.tags\n      };\n    } else {\n      var newsObject = {\n        id: this.state.newsId,\n        title: formTitle,\n        shortText: formShortText,\n        fullText: formFullText,\n        creationDate: this.state.creationDate,\n        //   author: this.state.author,\n        author: selectedAuthor,\n        tags: this.state.tags\n      };\n    }\n\n    return newsObject;\n  }\n\n  render() {\n    const renderAllAuthorsList = this.state.allAuthors.map(a => {\n      if (a.id == this.state.author.id) {\n        return React.createElement(\"option\", {\n          selected: true,\n          value: a.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, a.name, \" \", a.surname);\n      } else {\n        return React.createElement(\"option\", {\n          value: a.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, a.name, \" \", a.surname);\n      }\n    });\n    const renderAllTagsList = this.state.allTags.map(t => {\n      return React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, t.name);\n    });\n    const renderThisNewsTags = this.state.tags.map(tag => {\n      return React.createElement(TagButton, {\n        tagName: tag.name,\n        deleteClick: () => this.deleteTagFromState(tag.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"newsTitleField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, this.props.t(\"title\")), React.createElement(\"input\", {\n      id: \"newsTitleField\",\n      className: \"form-control\",\n      type: \"text\",\n      maxLength: \"30\",\n      defaultValue: this.state.newsTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"newsShortTextField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, this.props.t(\"short_text\")), React.createElement(\"textarea\", {\n      id: \"newsShortTextField\",\n      className: \"form-control\",\n      maxLength: \"100\",\n      rows: \"2\",\n      defaultValue: this.state.newsShortText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"newsFullTextField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, this.props.t(\"full_text\")), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"newsFullTextField\",\n      maxLength: \"2000\",\n      rows: \"8\",\n      defaultValue: this.state.newsFullText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"authorsSelectField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, this.props.t(\"author\")), React.createElement(\"select\", {\n      id: \"authorsSelectField\",\n      class: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, renderAllAuthorsList)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, this.props.t(\"selected_tags\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, renderThisNewsTags)), React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"tagsMultiselectField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, this.props.t(\"existing_tags\")), React.createElement(\"select\", {\n      multiple: true,\n      id: \"tag-select-field\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, renderAllTagsList), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group mb-3 w-100 my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"newTagField\",\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: this.props.t(\"new_tag_name\"),\n      \"aria-describedby\": \"button-addon2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-success btn-sm\",\n      type: \"button\",\n      id: \"add-tags-button\",\n      onClick: () => this.setNewTagsToState(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, this.props.t(\"add\"))))))))), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary btn-block mx-1\",\n      onClick: () => this.editNews(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, this.props.t(\"save\"))), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      className: \"btn btn-outline-danger btn-block mx-1\",\n      role: \"button\",\n      \"aria-pressed\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, this.props.t(\"to_news_list\")))))))), React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default NewsEditForm;","map":{"version":3,"sources":["C:/git/laboratory/news-front/src/component/NewsEditForm.jsx"],"names":["React","NewsDataService","TagDataService","AuthorDataService","TagButton","NewsEditForm","Component","constructor","props","state","newsId","newsTitle","newsShortText","newsFullText","creationDate","author","tags","allTags","allAuthors","componentDidMount","match","params","id","refreshNews","refreshAuthorsList","refreshTagsList","getNewsById","then","response","setState","data","title","shortText","fullText","getAllTags","getAllAuthors","editNews","news","buildNewsObjectFromFormFieldsAndState","window","location","href","console","log","createNews","deleteTagFromState","tagName","stateTagsArray","k","length","name","splice","setNewTagsToState","newTagFieldValue","document","getElementById","value","selectTagFieldValue","childNodes","i","selected","containsInState","j","textContent","push","thisTagContainsInState","formTitle","formShortText","formFullText","selectedAuthor","selectAuthorFieldValue","surname","newsObject","render","renderAllAuthorsList","map","a","renderAllTagsList","t","renderThisNewsTags","tag"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport NewsDataService from './NewsDataService'\r\nimport TagDataService from './TagDataService'\r\nimport AuthorDataService from './AuthorDataService'\r\nimport TagButton from './TagButton'\r\n\r\n\r\nclass NewsEditForm extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            newsId: {},\r\n            newsTitle: '',\r\n            newsShortText: '',\r\n            newsFullText: '',\r\n            creationDate: '',\r\n            author: {},\r\n            tags: [],\r\n            allTags: [],\r\n            allAuthors: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.props.match.params.id > 0){\r\n            this.refreshNews(this.props.match.params.id);\r\n        }\r\n        this.refreshAuthorsList();\r\n        this.refreshTagsList(); \r\n    }\r\n\r\n    refreshNews(id) {\r\n        NewsDataService.getNewsById(id)\r\n        .then(\r\n            response => {\r\n                this.setState({newsId: response.data.id});\r\n                this.setState({newsTitle: response.data.title});\r\n                this.setState({newsShortText: response.data.shortText});\r\n                this.setState({newsFullText: response.data.fullText});\r\n                this.setState({creationDate: response.data.creationDate});\r\n                this.setState({author: response.data.author});\r\n                this.setState({tags: response.data.tags});\r\n            }\r\n        )\r\n    }\r\n\r\n    refreshTagsList(){\r\n        TagDataService.getAllTags()\r\n        .then(\r\n            response => {\r\n                this.setState({allTags: response.data});\r\n            }\r\n        )\r\n    }\r\n\r\n    refreshAuthorsList(){\r\n        AuthorDataService.getAllAuthors()\r\n        .then(\r\n            response => {\r\n                this.setState({allAuthors: response.data});\r\n            }\r\n        )\r\n    }\r\n\r\n    editNews(){\r\n        let news = this.buildNewsObjectFromFormFieldsAndState();\r\n        if(this.state.newsId > 0){\r\n            NewsDataService.editNews(news)\r\n            .then(\r\n                response => {\r\n                    window.location.href = \"/news/edit/\" + response.data.id;\r\n                }\r\n            )\r\n        } else {\r\n            console.log(news);\r\n            console.log(news.title);\r\n            console.log(news.shortText);\r\n            console.log(news.fullText);\r\n            console.log(news.tags);\r\n            NewsDataService.createNews(news)\r\n            .then(\r\n                response => {\r\n                    window.location.href = \"/news/edit/\" + response.data.id;\r\n                }\r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    deleteTagFromState(tagName){\r\n        let stateTagsArray = [];\r\n        stateTagsArray = this.state.tags;\r\n\r\n        for(var k=0; k<stateTagsArray.length; k++){\r\n            if(stateTagsArray[k].name === tagName){\r\n                stateTagsArray.splice(k, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({tags: stateTagsArray});\r\n    }\r\n\r\n    setNewTagsToState(){\r\n        let stateTagsArray = [];\r\n        stateTagsArray = this.state.tags;\r\n        let newTagFieldValue = document.getElementById(\"newTagField\").value;\r\n        let selectTagFieldValue = document.getElementById(\"tag-select-field\").childNodes; \r\n\r\n        for(var i=0; i<selectTagFieldValue.length; i++){\r\n            if(selectTagFieldValue[i].selected){\r\n\r\n                var containsInState = false;\r\n\r\n                for(var j=0; j<stateTagsArray.length; j++){\r\n                    if(stateTagsArray[j].name === selectTagFieldValue[i].textContent){\r\n                        containsInState = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(!containsInState){\r\n                    stateTagsArray.push({name: selectTagFieldValue[i].textContent});\r\n                }\r\n\r\n                containsInState = false;\r\n            }\r\n        }\r\n\r\n        var thisTagContainsInState = false;\r\n\r\n        for(var k=0; k<stateTagsArray.length; k++){\r\n            if(stateTagsArray[k].name === newTagFieldValue){\r\n                thisTagContainsInState = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if((newTagFieldValue.length !== 0) && (!thisTagContainsInState)){\r\n            stateTagsArray.push({id: null, name: newTagFieldValue});\r\n        }\r\n\r\n        for(var i=0; i<selectTagFieldValue.length; i++){\r\n            if(selectTagFieldValue[i].selected){\r\n                selectTagFieldValue[i].selected = false;\r\n            }\r\n        }\r\n\r\n        this.setState({tags: stateTagsArray});\r\n        \r\n    }\r\n\r\n    buildNewsObjectFromFormFieldsAndState(){\r\n        let formTitle = document.getElementById(\"newsTitleField\").value;\r\n        let formShortText = document.getElementById(\"newsShortTextField\").value;\r\n        let formFullText = document.getElementById(\"newsFullTextField\").value;\r\n\r\n        let selectedAuthor = {};\r\n        let selectAuthorFieldValue = document.getElementById(\"authorsSelectField\").childNodes; \r\n\r\n        for(var i=0; i<selectAuthorFieldValue.length; i++){\r\n            if(selectAuthorFieldValue[i].selected){\r\n                selectedAuthor = {id: selectAuthorFieldValue[i].value, name: null, surname: null};\r\n            }\r\n        }\r\n\r\n        var newsObject = {};\r\n        if(this.state.newsId < 0){\r\n            newsObject = {\r\n                title: formTitle,\r\n                shortText: formShortText,\r\n                fullText: formFullText,\r\n                creationDate: this.state.creationDate,\r\n              //   author: this.state.author,\r\n                author: selectedAuthor,\r\n                tags: this.state.tags};\r\n        } else {\r\n            var newsObject = {\r\n                id: this.state.newsId,\r\n                title: formTitle,\r\n                shortText: formShortText,\r\n                fullText: formFullText,\r\n                creationDate: this.state.creationDate,\r\n              //   author: this.state.author,\r\n                author: selectedAuthor,\r\n                tags: this.state.tags};\r\n        }\r\n\r\n        return newsObject;\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const renderAllAuthorsList = this.state.allAuthors.map(a => {\r\n            if(a.id == this.state.author.id){\r\n                return(\r\n                    <option selected value={a.id}>{a.name} {a.surname}</option>\r\n                )\r\n            } else {\r\n                return(\r\n                    <option value={a.id}>{a.name} {a.surname}</option>\r\n                )\r\n            }\r\n        })\r\n\r\n        const renderAllTagsList = this.state.allTags.map(t => {\r\n            return(\r\n                <option>{t.name}</option>\r\n            )\r\n        })\r\n\r\n        const renderThisNewsTags = this.state.tags.map(tag => {\r\n            return(\r\n                <TagButton \r\n                tagName={tag.name}\r\n                deleteClick={() => this.deleteTagFromState(tag.name)}\r\n                />\r\n            )\r\n        }) \r\n\r\n        return(\r\n\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-10\">\r\n                    <div>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"newsTitleField\">{this.props.t(\"title\")}</label>\r\n                                <input id=\"newsTitleField\" className=\"form-control\" type=\"text\" maxLength=\"30\" defaultValue={this.state.newsTitle}/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"newsShortTextField\">{this.props.t(\"short_text\")}</label>\r\n                                <textarea id=\"newsShortTextField\" className=\"form-control\" maxLength=\"100\" rows=\"2\" defaultValue={this.state.newsShortText}></textarea>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"newsFullTextField\">{this.props.t(\"full_text\")}</label>\r\n                                <textarea className=\"form-control\" id=\"newsFullTextField\"  maxLength=\"2000\" rows=\"8\" defaultValue={this.state.newsFullText}></textarea>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"authorsSelectField\">{this.props.t(\"author\")}</label>\r\n                                    <select id=\"authorsSelectField\" class=\"form-control\">\r\n                                        {renderAllAuthorsList}\r\n                                    </select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <label>{this.props.t(\"selected_tags\")}</label>\r\n                                            <div>\r\n                                                {renderThisNewsTags}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <label for=\"tagsMultiselectField\">{this.props.t(\"existing_tags\")}</label>\r\n                                            <select multiple  id=\"tag-select-field\" className=\"form-control\">\r\n                                                {renderAllTagsList}\r\n                                            </select>\r\n                                            <div>\r\n                                                <div className=\"input-group mb-3 w-100 my-3\">\r\n                                                    <input id=\"newTagField\" type=\"text\" className=\"form-control\" placeholder={this.props.t(\"new_tag_name\")} aria-describedby=\"button-addon2\"/>\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-outline-success btn-sm\" type=\"button\" id=\"add-tags-button\" onClick={() => this.setNewTagsToState()}>{this.props.t(\"add\")}</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col\">\r\n                                        <button type=\"button\" className=\"btn btn-primary btn-block mx-1\" onClick={() => this.editNews()}>{this.props.t(\"save\")}</button>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <a href=\"/\" className=\"btn btn-outline-danger btn-block mx-1\" role=\"button\" aria-pressed=\"true\">{this.props.t(\"to_news_list\")}</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n            </div>\r\n        </div>\r\n\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsEditForm"]},"metadata":{},"sourceType":"module"}