{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\laboratory\\\\news-front\\\\src\\\\component\\\\AuthorsList.jsx\";\nimport React from 'react';\nimport AuthorDataService from './AuthorDataService';\n\nclass AuthorsList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authors: [],\n      howMany: 10,\n      authorsAmount: 1,\n      pageNumber: 0\n    };\n  }\n\n  componentDidMount() {\n    this.refreshAuthors(this.state.pageNumber);\n  }\n\n  refreshAuthors(from) {\n    AuthorDataService.getAllAuthors(from, this.state.howMany).then(response => {\n      this.setState({\n        authors: response.data,\n        authorsAmount: response.headers['authors-amount'],\n        pageNumber: response.headers['page-number']\n      });\n    });\n  }\n\n  createAuthor() {\n    let errorsExist = this.nameSurnameErrorRender();\n\n    if (errorsExist > 0) {\n      return;\n    }\n\n    let newAuthorName = document.getElementById(\"newAuthorNameField\").value;\n    let newAuthorSurname = document.getElementById(\"newAuthorSurnameField\").value;\n    let newAuthor = {\n      id: null,\n      name: newAuthorName,\n      surname: newAuthorSurname\n    };\n    AuthorDataService.createAuthor(newAuthor).then(response => {\n      document.getElementById(\"newAuthorNameField\").value = \"\";\n      document.getElementById(\"newAuthorSurnameField\").value = \"\";\n      this.refreshAuthors(this.state.pageNumber);\n    });\n  }\n\n  saveChangedAuthor(authorId) {\n    let authorName = document.getElementById(\"authorNameField\" + authorId).value;\n    let authorSurname = document.getElementById(\"authorSurnameField\" + authorId).value;\n    let author = {\n      id: authorId,\n      name: authorName,\n      surname: authorSurname\n    };\n    AuthorDataService.editAuthor(author).then(response => {\n      this.refreshAuthors(this.state.pageNumber);\n    });\n  }\n\n  deleteAuthor(id) {\n    AuthorDataService.deleteAuthor(id).then(response => {\n      this.refreshAuthors(this.state.pageNumber);\n    });\n  }\n\n  cleanErrorMessage(errorFieldId) {\n    let previousErrorMessage = document.getElementById(errorFieldId);\n\n    if (previousErrorMessage) {\n      previousErrorMessage.remove();\n    }\n  }\n\n  validateAuthorName(value) {\n    let errorMessage = \"\";\n\n    if (!value) {\n      errorMessage = this.props.t(\"author_name_surname_mustnt_be_empty\");\n    } else if (value.length > 30) {\n      errorMessage = this.props.t(\"author_name_surname_mustnt_be_larger_than_30_characters\");\n    }\n\n    return errorMessage;\n  }\n\n  createErrorField(fieldId, errorMessage, afterElementId) {\n    let small = document.createElement('small');\n    small.id = fieldId;\n    small.className = \"text-danger\";\n    small.innerText = errorMessage;\n    let fieldSet = document.getElementById(afterElementId);\n    fieldSet.after(small);\n  }\n\n  nameSurnameErrorRender() {\n    let errorsExist = 0;\n    this.cleanErrorMessage(\"authorNameErrorMessage\");\n    this.cleanErrorMessage(\"authorSurnameErrorMessage\");\n    let newAuthorName = document.getElementById(\"newAuthorNameField\").value;\n    let newAuthorSurname = document.getElementById(\"newAuthorSurnameField\").value;\n    let errorMessage1 = this.validateAuthorName(newAuthorName);\n    let errorMessage2 = this.validateAuthorName(newAuthorSurname);\n\n    if (errorMessage1) {\n      this.createErrorField(\"authorNameErrorMessage\", errorMessage1, \"newAuthorInputGroup\");\n      errorsExist++;\n    }\n\n    if (errorMessage2) {\n      this.createErrorField(\"authorSurnameErrorMessage\", errorMessage2, \"newAuthorInputGroup\");\n      errorsExist++;\n    }\n\n    return errorsExist;\n  }\n\n  handleEditingName(index, inputValue) {\n    const authorsArrToChage = this.state.authors.slice();\n    authorsArrToChage[index].name = inputValue;\n    this.setState({\n      authors: authorsArrToChage\n    });\n  }\n\n  handleEditingSurname(index, inputValue) {\n    const authorsArrToChage = this.state.authors.slice();\n    authorsArrToChage[index].surname = inputValue;\n    this.setState({\n      authors: authorsArrToChage\n    });\n  }\n\n  render() {\n    const renderPagination = () => {\n      let pageButtons = [];\n\n      for (let i = 0; i < Math.ceil(this.state.authorsAmount / this.state.howMany); i++) {\n        if (i == this.state.pageNumber) {// pageButtons.push(<li className=\"page-item\"><a className=\"page-link text-danger\" href=\"#\" onClick={() => this.refreshAuthors(i)}>{i+1}</a></li>);  \n        } else {\n          pageButtons.push(React.createElement(\"li\", {\n            className: \"page-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            className: \"page-link\",\n            href: \"#\",\n            onClick: () => this.refreshAuthors(i),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, i + 1)));\n        }\n      }\n\n      return pageButtons;\n    };\n\n    const renderAuthorsList = this.state.authors.map((author, index) => {\n      return React.createElement(\"div\", {\n        className: \"row my-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"authorNameField\" + author.id,\n        className: \"form-control\",\n        type: \"text\",\n        value: author.name,\n        onChange: e => this.handleEditingName(index, e.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"authorSurnameField\" + author.id,\n        className: \"form-control\",\n        type: \"text\",\n        value: author.surname,\n        onChange: e => this.handleEditingName(index, e.target.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-primary btn-block mx-1\",\n        onClick: () => this.saveChangedAuthor(author.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, this.props.t(\"save\"))), React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-danger btn-block mx-1\",\n        onClick: () => this.deleteAuthor(author.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, this.props.t(\"delete\"))), React.createElement(\"div\", {\n        className: \"col-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"newAuthorInputGroup\",\n      className: \"input-group mb-3 w-100 my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"newAuthorNameField\",\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: this.props.t(\"new_author_name\"),\n      \"aria-describedby\": \"button-addon2\",\n      onFocus: () => this.cleanErrorMessage(\"authorNameErrorMessage\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"newAuthorSurnameField\",\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: this.props.t(\"new_author_surname\"),\n      \"aria-describedby\": \"button-addon2\",\n      onFocus: () => this.cleanErrorMessage(\"authorSurnameErrorMessage\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-success btn-sm\",\n      type: \"button\",\n      id: \"add-tags-button\",\n      onClick: () => this.createAuthor(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.props.t(\"add\")))), renderAuthorsList, React.createElement(\"nav\", {\n      \"aria-label\": \"Pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"pagination justify-content-center py-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, this.state.pageNumber == 0 ? React.createElement(\"a\", {\n      className: \"page-link text-muted\",\n      href: \"#\",\n      \"aria-label\": \"Previous\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"\\xAB\")) : React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#\",\n      \"aria-label\": \"Previous\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      onClick: () => this.refreshAuthors(this.state.pageNumber - 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"\\xAB\"))), renderPagination(), React.createElement(\"li\", {\n      className: \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, this.state.pageNumber == Math.floor(this.state.authorsAmount / this.state.howMany) ? React.createElement(\"a\", {\n      className: \"page-link text-muted\",\n      href: \"#\",\n      \"aria-label\": \"Next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"\\xBB\")) : React.createElement(\"a\", {\n      className: \"page-link\",\n      href: \"#\",\n      \"aria-label\": \"Next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\",\n      onClick: () => this.refreshAuthors(this.state.pageNumber + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"\\xBB\")))))), React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AuthorsList;","map":{"version":3,"sources":["C:/git/laboratory/news-front/src/component/AuthorsList.jsx"],"names":["React","AuthorDataService","AuthorsList","Component","constructor","props","state","authors","howMany","authorsAmount","pageNumber","componentDidMount","refreshAuthors","from","getAllAuthors","then","response","setState","data","headers","createAuthor","errorsExist","nameSurnameErrorRender","newAuthorName","document","getElementById","value","newAuthorSurname","newAuthor","id","name","surname","saveChangedAuthor","authorId","authorName","authorSurname","author","editAuthor","deleteAuthor","cleanErrorMessage","errorFieldId","previousErrorMessage","remove","validateAuthorName","errorMessage","t","length","createErrorField","fieldId","afterElementId","small","createElement","className","innerText","fieldSet","after","errorMessage1","errorMessage2","handleEditingName","index","inputValue","authorsArrToChage","slice","handleEditingSurname","render","renderPagination","pageButtons","i","Math","ceil","push","renderAuthorsList","map","e","target","floor"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport AuthorDataService from './AuthorDataService'\r\n\r\nclass AuthorsList extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            authors:[],\r\n            howMany: 10,\r\n            authorsAmount: 1,\r\n            pageNumber: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshAuthors(this.state.pageNumber);\r\n    }\r\n\r\n    refreshAuthors(from){\r\n        AuthorDataService.getAllAuthors(from, this.state.howMany)\r\n        .then(\r\n            response => {\r\n                this.setState({authors: response.data, authorsAmount: response.headers['authors-amount'], pageNumber: response.headers['page-number']});\r\n            }\r\n        )\r\n    }\r\n\r\n    createAuthor(){\r\n\r\n        let errorsExist = this.nameSurnameErrorRender();\r\n        if(errorsExist > 0){\r\n            return;\r\n        }\r\n\r\n        let newAuthorName = document.getElementById(\"newAuthorNameField\").value;\r\n        let newAuthorSurname = document.getElementById(\"newAuthorSurnameField\").value;\r\n\r\n        let newAuthor ={id: null, name: newAuthorName, surname: newAuthorSurname}; \r\n\r\n        AuthorDataService.createAuthor(newAuthor)\r\n        .then(\r\n            response => {\r\n                document.getElementById(\"newAuthorNameField\").value = \"\";\r\n                document.getElementById(\"newAuthorSurnameField\").value = \"\";\r\n                this.refreshAuthors(this.state.pageNumber);\r\n            }\r\n        )\r\n    }\r\n\r\n    saveChangedAuthor(authorId){\r\n        let authorName = document.getElementById(\"authorNameField\" + authorId).value;\r\n        let authorSurname = document.getElementById(\"authorSurnameField\" + authorId).value;\r\n        let author ={id: authorId, name: authorName, surname: authorSurname}; \r\n        AuthorDataService.editAuthor(author)\r\n        .then(\r\n            response => {\r\n                this.refreshAuthors(this.state.pageNumber);\r\n            }\r\n        )\r\n    }\r\n\r\n    deleteAuthor(id){\r\n        AuthorDataService.deleteAuthor(id)\r\n        .then(\r\n            response => {\r\n                this.refreshAuthors(this.state.pageNumber);\r\n            }\r\n        )\r\n    }\r\n\r\n    cleanErrorMessage(errorFieldId){\r\n        let previousErrorMessage = document.getElementById(errorFieldId);\r\n        if (previousErrorMessage) {\r\n            previousErrorMessage.remove();\r\n        }\r\n    }\r\n\r\n    validateAuthorName(value) {\r\n        let errorMessage = \"\";\r\n        if (!value) {\r\n            errorMessage = this.props.t(\"author_name_surname_mustnt_be_empty\");\r\n        } else if (value.length > 30) {\r\n            errorMessage = this.props.t(\"author_name_surname_mustnt_be_larger_than_30_characters\");\r\n        } \r\n        return errorMessage;\r\n    }\r\n\r\n    createErrorField(fieldId, errorMessage, afterElementId) {\r\n        let small = document.createElement('small');\r\n        small.id = fieldId;\r\n        small.className = \"text-danger\";\r\n        small.innerText = errorMessage;\r\n        let fieldSet = document.getElementById(afterElementId);\r\n        fieldSet.after(small);\r\n    }\r\n\r\n    nameSurnameErrorRender(){\r\n        let errorsExist = 0;\r\n\r\n        this.cleanErrorMessage(\"authorNameErrorMessage\");\r\n        this.cleanErrorMessage(\"authorSurnameErrorMessage\");\r\n        let newAuthorName = document.getElementById(\"newAuthorNameField\").value;\r\n        let newAuthorSurname = document.getElementById(\"newAuthorSurnameField\").value;\r\n        \r\n        let errorMessage1 = this.validateAuthorName(newAuthorName);\r\n        let errorMessage2 = this.validateAuthorName(newAuthorSurname);\r\n\r\n        if (errorMessage1) {\r\n            this.createErrorField(\"authorNameErrorMessage\", errorMessage1, \"newAuthorInputGroup\");\r\n            errorsExist++;\r\n        }\r\n\r\n        if (errorMessage2) {\r\n            this.createErrorField(\"authorSurnameErrorMessage\", errorMessage2, \"newAuthorInputGroup\");\r\n            errorsExist++;\r\n        }\r\n\r\n        return errorsExist;\r\n    } \r\n\r\n    handleEditingName(index, inputValue){\r\n        const authorsArrToChage = this.state.authors.slice();\r\n        authorsArrToChage[index].name = inputValue;\r\n        this.setState({authors: authorsArrToChage});\r\n    }\r\n\r\n    handleEditingSurname(index, inputValue){\r\n        const authorsArrToChage = this.state.authors.slice();\r\n        authorsArrToChage[index].surname = inputValue;\r\n        this.setState({authors: authorsArrToChage});\r\n    }\r\n\r\n    render(){\r\n\r\n        const renderPagination = () => {\r\n            let pageButtons = [];\r\n\r\n            for (let i = 0; i < Math.ceil(this.state.authorsAmount/this.state.howMany); i++) {\r\n                if(i == this.state.pageNumber){\r\n                    // pageButtons.push(<li className=\"page-item\"><a className=\"page-link text-danger\" href=\"#\" onClick={() => this.refreshAuthors(i)}>{i+1}</a></li>);  \r\n                } else {\r\n                    pageButtons.push(<li className=\"page-item\"><a className=\"page-link\" href=\"#\" onClick={() => this.refreshAuthors(i)}>{i+1}</a></li>);  \r\n                }\r\n                      \r\n            }\r\n            return pageButtons;\r\n        };\r\n\r\n        const renderAuthorsList = this.state.authors.map((author, index) => {\r\n            return(\r\n                <div className=\"row my-1\">\r\n                    <div className=\"col-1\"></div>\r\n                    <div className=\"col-3\">\r\n                        <input id={\"authorNameField\" + author.id} className=\"form-control\"  type=\"text\" value={author.name} onChange={(e) => this.handleEditingName(index, e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <input id={\"authorSurnameField\" + author.id} className=\"form-control\"  type=\"text\" value={author.surname} onChange={(e) => this.handleEditingName(index, e.target.value)}/>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <button type=\"button\" className=\"btn btn-outline-primary btn-block mx-1\" onClick={() => this.saveChangedAuthor(author.id)}>{this.props.t(\"save\")}</button>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <button type=\"button\" className=\"btn btn-outline-danger btn-block mx-1\" onClick={() => this.deleteAuthor(author.id)}>{this.props.t(\"delete\")}</button>\r\n                    </div>\r\n                    <div className=\"col-1\"></div>\r\n                </div>\r\n            )\r\n        }); \r\n\r\n        return(\r\n\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-10\">\r\n                <div id=\"newAuthorInputGroup\" className=\"input-group mb-3 w-100 my-3\">\r\n                    <input id=\"newAuthorNameField\" type=\"text\" className=\"form-control\" placeholder={this.props.t(\"new_author_name\")} aria-describedby=\"button-addon2\" onFocus={() => this.cleanErrorMessage(\"authorNameErrorMessage\")}/>\r\n                    <input id=\"newAuthorSurnameField\" type=\"text\" className=\"form-control\" placeholder={this.props.t(\"new_author_surname\")} aria-describedby=\"button-addon2\" onFocus={() => this.cleanErrorMessage(\"authorSurnameErrorMessage\")}/>\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-outline-success btn-sm\" type=\"button\" id=\"add-tags-button\" onClick={() => this.createAuthor()}>{this.props.t(\"add\")}</button>\r\n                    </div>\r\n                </div>\r\n\r\n                {renderAuthorsList}\r\n\r\n                <nav aria-label=\"Pagination\">\r\n                    <ul className=\"pagination justify-content-center py-4\">\r\n                        <li className=\"page-item\">\r\n                            {this.state.pageNumber == 0 ?\r\n                                <a className=\"page-link text-muted\" href=\"#\" aria-label=\"Previous\">\r\n                                    <span aria-hidden=\"true\">&laquo;</span>        \r\n                                </a>\r\n                            :\r\n                                <a className=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n                                    <span aria-hidden=\"true\" onClick = {() => this.refreshAuthors(this.state.pageNumber - 1)}>&laquo;</span>        \r\n                                </a>\r\n                            }\r\n                        </li>\r\n\r\n                        {renderPagination()}\r\n\r\n                        <li className=\"page-item\">\r\n                        \r\n                            {this.state.pageNumber == Math.floor(this.state.authorsAmount/this.state.howMany) ?\r\n                                <a className=\"page-link text-muted\" href=\"#\" aria-label=\"Next\">\r\n                                    <span aria-hidden=\"true\">&raquo;</span>\r\n                                </a>\r\n                            :\r\n                                <a className=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n                                    <span aria-hidden=\"true\" onClick = {() => this.refreshAuthors(this.state.pageNumber + 1)}>&raquo;</span>\r\n                                </a>\r\n                            }\r\n\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n            </div>\r\n            \r\n   \r\n            \r\n        </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthorsList"]},"metadata":{},"sourceType":"module"}