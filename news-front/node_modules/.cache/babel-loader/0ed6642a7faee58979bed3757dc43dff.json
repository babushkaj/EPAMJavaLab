{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\laboratory\\\\news-front\\\\src\\\\component\\\\NewsEditForm.jsx\";\nimport React from 'react';\nimport NewsDataService from './NewsDataService';\nimport TagDataService from './TagDataService';\nimport TagButton from './TagButton';\nimport $ from 'jquery';\n\nclass NewsEditForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getNewsByIdCallback = this.getNewsByIdCallback.bind(this);\n    this.getAllTagsCallback = this.getAllTagsCallback.bind(this);\n    this.state = {\n      newsId: {},\n      newsTitle: '',\n      newsShortText: '',\n      newsFullText: '',\n      author: {},\n      tags: [],\n      allTags: []\n    };\n  }\n\n  componentDidMount() {\n    this.refreshNews(this.props.match.params.id);\n    this.refreshTagsList();\n  }\n\n  refreshNews(id) {\n    NewsDataService.getNewsById(this.getNewsByIdCallback, id);\n  }\n\n  refreshTagsList() {\n    TagDataService.getAllTags(this.getAllTagsCallback);\n  }\n\n  getAllTagsCallback(result) {\n    this.setState({\n      allTags: result\n    });\n  }\n\n  getNewsByIdCallback(result) {\n    this.setState({\n      newsId: result.id\n    });\n    this.setState({\n      newsTitle: result.title\n    });\n    this.setState({\n      newsShortText: result.shortText\n    });\n    this.setState({\n      newsFullText: result.fullText\n    });\n    this.setState({\n      author: result.author\n    });\n    this.setState({\n      tags: result.tags\n    });\n  }\n\n  deleteTagFromState(tagName) {\n    let stateTagsArray = [];\n    stateTagsArray = this.state.tags;\n\n    for (var k = 0; k < stateTagsArray.length; k++) {\n      if (stateTagsArray[k].name == tagName) {\n        stateTagsArray.splice(k, 1);\n        break;\n      }\n    }\n\n    this.setState({\n      tags: stateTagsArray\n    });\n  }\n\n  setNewTagsToState() {\n    let stateTagsArray = [];\n    stateTagsArray = this.state.tags;\n    let newTagFieldValue = document.getElementById(\"new-tag-field\").value;\n    let selectTagFieldValue = document.getElementById(\"tag-select-field\").childNodes;\n\n    for (var i = 0; i < selectTagFieldValue.length; i++) {\n      if (selectTagFieldValue[i].selected) {\n        var containsInState = false;\n\n        for (var j = 0; j < stateTagsArray.length; j++) {\n          if (stateTagsArray[j].name == selectTagFieldValue[i].textContent) {\n            containsInState = true;\n            break;\n          }\n        }\n\n        if (!containsInState) {\n          stateTagsArray.push({\n            id: null,\n            name: selectTagFieldValue[i].textContent\n          });\n        }\n\n        containsInState = false;\n      }\n    }\n\n    var thisTagContainsInState = false;\n\n    for (var k = 0; k < stateTagsArray.length; k++) {\n      if (stateTagsArray[k].name == newTagFieldValue) {\n        thisTagContainsInState = true;\n        break;\n      }\n    }\n\n    if (newTagFieldValue.length !== 0 && !thisTagContainsInState) {\n      stateTagsArray.push({\n        id: null,\n        name: newTagFieldValue\n      });\n    }\n\n    this.setState({\n      tags: stateTagsArray\n    });\n  }\n\n  containFormFieldsToObject() {\n    let formTitle = document.getElementById(\"newsTitleField\").value;\n    let formShortText = document.getElementById(\"newsShortTextField\").value;\n    let formFullText = document.getElementById(\"newsFullTextField\").value;\n    var newsObject = {\n      id: this.state.newsId,\n      title: formTitle,\n      shortText: formShortText,\n      fullText: formFullText,\n      author: this.state.author,\n      tags: this.state.tags\n    };\n    console.log(\"==============================\");\n    console.log(newsObject);\n  }\n\n  render() {\n    const renderAllTagsList = this.state.allTags.map(t => {\n      return React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, t.name);\n    });\n    const renderThisNewsTags = this.state.tags.map(tag => {\n      return React.createElement(TagButton, {\n        tagName: tag.name,\n        deleteClick: () => this.deleteTagFromState(tag.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"newsTitleField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      id: \"newsTitleField\",\n      className: \"form-control\",\n      type: \"text\",\n      maxlength: \"30\",\n      value: \"asdadsdads\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"newsShortTextField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Short text\"), React.createElement(\"textarea\", {\n      id: \"newsShortTextField\",\n      className: \"form-control\",\n      maxlength: \"100\",\n      rows: \"2\",\n      value: this.state.newsShortText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"newsFullTextField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Full text\"), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"newsFullTextField\",\n      maxlength: \"2000\",\n      rows: \"8\",\n      value: this.state.newsFullText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Selected tags\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, renderThisNewsTags)), React.createElement(\"div\", {\n      className: \"col-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"tagsMultiselectField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Select tags\"), React.createElement(\"select\", {\n      multiple: true,\n      id: \"tag-select-field\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, renderAllTagsList), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group mb-3 w-100 my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"new-tag-field\",\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"New tag name\",\n      \"aria-describedby\": \"button-addon2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-success btn-sm\",\n      type: \"button\",\n      id: \"add-tags-button\",\n      onClick: () => this.setNewTagsToState(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Add tags\")))))))), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: () => this.containFormFieldsToObject(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Save changes\")))), React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default NewsEditForm;","map":{"version":3,"sources":["C:/git/laboratory/news-front/src/component/NewsEditForm.jsx"],"names":["React","NewsDataService","TagDataService","TagButton","$","NewsEditForm","Component","constructor","props","getNewsByIdCallback","bind","getAllTagsCallback","state","newsId","newsTitle","newsShortText","newsFullText","author","tags","allTags","componentDidMount","refreshNews","match","params","id","refreshTagsList","getNewsById","getAllTags","result","setState","title","shortText","fullText","deleteTagFromState","tagName","stateTagsArray","k","length","name","splice","setNewTagsToState","newTagFieldValue","document","getElementById","value","selectTagFieldValue","childNodes","i","selected","containsInState","j","textContent","push","thisTagContainsInState","containFormFieldsToObject","formTitle","formShortText","formFullText","newsObject","console","log","render","renderAllTagsList","map","t","renderThisNewsTags","tag"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport NewsDataService from './NewsDataService'\r\nimport TagDataService from './TagDataService'\r\nimport TagButton from './TagButton'\r\n\r\nimport $ from 'jquery'\r\n\r\nclass NewsEditForm extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.getNewsByIdCallback = this.getNewsByIdCallback.bind(this);\r\n        this.getAllTagsCallback = this.getAllTagsCallback.bind(this);\r\n        this.state = {\r\n            newsId: {},\r\n            newsTitle: '',\r\n            newsShortText: '',\r\n            newsFullText: '',\r\n            author: {},\r\n            tags: [],\r\n            allTags: [],\r\n\t\t}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshNews(this.props.match.params.id);\r\n        this.refreshTagsList();\r\n    }\r\n\r\n    refreshNews(id) {\r\n        NewsDataService.getNewsById(this.getNewsByIdCallback, id);\r\n    }\r\n\r\n    refreshTagsList(){\r\n        TagDataService.getAllTags(this.getAllTagsCallback);\r\n    }\r\n\r\n    getAllTagsCallback(result){\r\n        this.setState({allTags: result});\r\n    }\r\n\r\n    getNewsByIdCallback(result) {\r\n        this.setState({newsId: result.id});\r\n        this.setState({newsTitle: result.title});\r\n        this.setState({newsShortText: result.shortText});\r\n        this.setState({newsFullText: result.fullText});\r\n        this.setState({author: result.author});\r\n        this.setState({tags: result.tags});\r\n    }  \r\n\r\n    deleteTagFromState(tagName){\r\n        let stateTagsArray = [];\r\n        stateTagsArray = this.state.tags;\r\n\r\n        for(var k=0; k<stateTagsArray.length; k++){\r\n            if(stateTagsArray[k].name == tagName){\r\n                stateTagsArray.splice(k, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({tags: stateTagsArray});\r\n    }\r\n\r\n    setNewTagsToState(){\r\n        let stateTagsArray = [];\r\n        stateTagsArray = this.state.tags;\r\n        let newTagFieldValue = document.getElementById(\"new-tag-field\").value;\r\n        let selectTagFieldValue = document.getElementById(\"tag-select-field\").childNodes; \r\n\r\n        for(var i=0; i<selectTagFieldValue.length; i++){\r\n            if(selectTagFieldValue[i].selected){\r\n\r\n                var containsInState = false;\r\n\r\n                for(var j=0; j<stateTagsArray.length; j++){\r\n                    if(stateTagsArray[j].name == selectTagFieldValue[i].textContent){\r\n                        containsInState = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(!containsInState){\r\n                    stateTagsArray.push({id: null, name: selectTagFieldValue[i].textContent});\r\n                }\r\n\r\n                containsInState = false;\r\n            }\r\n        }\r\n\r\n        var thisTagContainsInState = false;\r\n\r\n        for(var k=0; k<stateTagsArray.length; k++){\r\n            if(stateTagsArray[k].name == newTagFieldValue){\r\n                thisTagContainsInState = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if((newTagFieldValue.length !== 0) && (!thisTagContainsInState)){\r\n            stateTagsArray.push({id: null, name: newTagFieldValue});\r\n        }\r\n\r\n        this.setState({tags: stateTagsArray});\r\n    }\r\n\r\n    containFormFieldsToObject(){\r\n        let formTitle = document.getElementById(\"newsTitleField\").value;\r\n        let formShortText = document.getElementById(\"newsShortTextField\").value;\r\n        let formFullText = document.getElementById(\"newsFullTextField\").value;\r\n\r\n        var newsObject = {id: this.state.newsId,\r\n                          title: formTitle,\r\n                          shortText: formShortText,\r\n                          fullText: formFullText,\r\n                          author: this.state.author,\r\n                          tags: this.state.tags};\r\n\r\n        console.log(\"==============================\");\r\n        console.log(newsObject);\r\n    }\r\n\r\n    render(){\r\n\r\n        const renderAllTagsList = this.state.allTags.map(t => {\r\n            return(\r\n            <option>{t.name}</option>\r\n            )\r\n        })\r\n\r\n        const renderThisNewsTags = this.state.tags.map(tag => {\r\n            return(\r\n                <TagButton \r\n                tagName={tag.name}\r\n                deleteClick={() => this.deleteTagFromState(tag.name)}\r\n                />\r\n            )\r\n        }) \r\n\r\n        return(\r\n\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-10\">\r\n                    <div>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"newsTitleField\">Title</label>\r\n                                <input id=\"newsTitleField\" className=\"form-control\" type=\"text\" maxlength=\"30\" value=\"asdadsdads\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"newsShortTextField\">Short text</label>\r\n                                <textarea id=\"newsShortTextField\" className=\"form-control\" maxlength=\"100\" rows=\"2\" value={this.state.newsShortText}></textarea>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"newsFullTextField\">Full text</label>\r\n                                <textarea className=\"form-control\" id=\"newsFullTextField\"  maxlength=\"2000\" rows=\"8\" value={this.state.newsFullText}></textarea>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <label>Selected tags</label>\r\n                                            <div>\r\n                                                {renderThisNewsTags}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <label for=\"tagsMultiselectField\">Select tags</label>\r\n                                            <select multiple  id=\"tag-select-field\" className=\"form-control\">\r\n                                                {renderAllTagsList}\r\n                                            </select>\r\n                                            <div>\r\n                                                <div className=\"input-group mb-3 w-100 my-3\">\r\n                                                    <input id=\"new-tag-field\" type=\"text\" className=\"form-control\" placeholder=\"New tag name\" aria-describedby=\"button-addon2\"/>\r\n                                                    <div className=\"input-group-append\">\r\n                                                        <button className=\"btn btn-outline-success btn-sm\" type=\"button\" id=\"add-tags-button\" onClick={() => this.setNewTagsToState()}>Add tags</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                             <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.containFormFieldsToObject()}>Save changes</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n            </div>\r\n        </div>\r\n\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default NewsEditForm"]},"metadata":{},"sourceType":"module"}