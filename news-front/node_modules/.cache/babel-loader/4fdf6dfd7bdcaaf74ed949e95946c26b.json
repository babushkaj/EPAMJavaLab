{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\laboratory\\\\news-front\\\\src\\\\component\\\\NewsContainer.jsx\";\nimport React from 'react';\nimport NewsCardShort from './NewsCardShort';\nimport NewsDataService from './NewsDataService';\nimport TagDataService from './TagDataService';\n\nclass NewsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      news: [],\n      allTags: []\n    };\n  }\n\n  componentDidMount() {\n    this.refreshNews();\n    this.refreshTags();\n  }\n\n  refreshNews() {\n    NewsDataService.getAllNews().then(response => {\n      this.setState({\n        news: response.data\n      });\n    });\n  }\n\n  refreshTags() {\n    TagDataService.getAllTags().then(response => {\n      this.setState({\n        allTags: response.data\n      });\n    });\n  }\n\n  deleteNews(id) {\n    NewsDataService.deleteNews(id).then(response => {\n      this.refreshNews();\n    });\n  }\n\n  showOneNews(id) {\n    // window.location.href = \"/news/\" + id;\n    this.props.history.push(`/news/` + id);\n  }\n\n  search() {\n    let searchString = this.collectSearchDataToSearchString();\n\n    if (searchString) {\n      NewsDataService.findNews(searchString).then(response => {\n        this.setState({\n          news: response.data\n        });\n      });\n    }\n  }\n\n  collectSearchDataToSearchString() {\n    const authorNameCriteriaName = \"author_name\";\n    const authorSurnameCriteriaName = \"author_surname\";\n    const tagCriteriaName = \"tags_name\";\n    let searchAuthorName = document.getElementById(\"searchAuthorNameField\").value;\n    let authorNameSearchCriteria = \"\";\n\n    if (searchAuthorName) {\n      authorNameSearchCriteria = authorNameCriteriaName + \":\" + searchAuthorName;\n    }\n\n    let searchAuthorSurname = document.getElementById(\"searchAuthorSurnameField\").value;\n    let authorSurnameSearchCriteria = \"\";\n\n    if (searchAuthorSurname) {\n      authorSurnameSearchCriteria = authorSurnameCriteriaName + \":\" + searchAuthorSurname;\n    }\n\n    let selectTagFieldValue = document.getElementById(\"tagsSelectField\").childNodes;\n    let selectedTags = [];\n\n    for (var i = 0; i < selectTagFieldValue.length; i++) {\n      if (selectTagFieldValue[i].selected) {\n        selectedTags.push(selectTagFieldValue[i].textContent);\n      }\n    }\n\n    let tagsSearchCriteria = \"\";\n\n    if (selectedTags.length > 0) {\n      tagsSearchCriteria = tagCriteriaName + \":\" + selectedTags[0];\n    }\n\n    for (var j = 1; j < selectedTags.length; j++) {\n      tagsSearchCriteria = tagsSearchCriteria + \",\" + tagCriteriaName + \":\" + selectedTags[j];\n    }\n\n    let searchString = \"\";\n\n    if (authorNameSearchCriteria) {\n      searchString = searchString + authorNameSearchCriteria;\n    }\n\n    if (authorSurnameSearchCriteria) {\n      if (searchString) {\n        searchString = searchString + \",\" + authorSurnameSearchCriteria;\n      } else {\n        searchString = searchString + authorSurnameSearchCriteria;\n      }\n    }\n\n    if (tagsSearchCriteria) {\n      if (searchString) {\n        searchString = searchString + \",\" + tagsSearchCriteria;\n      } else {\n        searchString = searchString + tagsSearchCriteria;\n      }\n    }\n\n    if (searchString) {\n      return \"?search=\" + searchString;\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    const renderAllTagsList = this.state.allTags.map(t => {\n      return React.createElement(\"option\", {\n        value: t.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, t.name);\n    });\n    const renderNewsCards = this.state.news.map(n => {\n      return React.createElement(NewsCardShort, {\n        newsId: n.id,\n        newsTitle: n.title,\n        newsST: n.shortText,\n        newsCrDate: n.creationDate,\n        newsAuthor: n.author,\n        newsTags: n.tags,\n        deleteClick: () => this.deleteNews(n.id),\n        readClick: () => this.showOneNews(n.id),\n        toNewsListClick: () => this.showNewsList(),\n        deleteClick: () => this.deleteNews(n.id),\n        t: this.props.t,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group mb-3 w-100 my-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"searchAuthorNameField\",\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: this.props.t(\"new_author_name\"),\n      \"aria-describedby\": \"button-addon2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"searchAuthorSurnameField\",\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: this.props.t(\"new_author_surname\"),\n      \"aria-describedby\": \"button-addon2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"select\", {\n      multiple: true,\n      id: \"tagsSelectField\",\n      className: \"form-control\",\n      size: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, renderAllTagsList)), React.createElement(\"div\", {\n      className: \"col-2 align-self-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-outline-primary btn-block\",\n      type: \"button\",\n      id: \"buttonSearch\",\n      onClick: () => this.collectSearchDataToSearchString(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.props.t(\"search\"))))), renderNewsCards), React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default NewsContainer;","map":{"version":3,"sources":["C:/git/laboratory/news-front/src/component/NewsContainer.jsx"],"names":["React","NewsCardShort","NewsDataService","TagDataService","NewsContainer","Component","constructor","props","state","news","allTags","componentDidMount","refreshNews","refreshTags","getAllNews","then","response","setState","data","getAllTags","deleteNews","id","showOneNews","history","push","search","searchString","collectSearchDataToSearchString","findNews","authorNameCriteriaName","authorSurnameCriteriaName","tagCriteriaName","searchAuthorName","document","getElementById","value","authorNameSearchCriteria","searchAuthorSurname","authorSurnameSearchCriteria","selectTagFieldValue","childNodes","selectedTags","i","length","selected","textContent","tagsSearchCriteria","j","render","renderAllTagsList","map","t","name","renderNewsCards","n","title","shortText","creationDate","author","tags","showNewsList"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport NewsCardShort from './NewsCardShort'\r\nimport NewsDataService from './NewsDataService'\r\nimport TagDataService from './TagDataService'\r\n \r\nclass NewsContainer extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            news: [],\r\n            allTags: [],\r\n\t\t}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshNews();\r\n        this.refreshTags();\r\n    }\r\n\r\n    refreshNews() {\r\n        NewsDataService.getAllNews()\r\n        .then(\r\n            response => {\r\n                this.setState({news: response.data});\r\n            }\r\n        )\r\n    }\r\n\r\n    refreshTags(){\r\n        TagDataService.getAllTags()\r\n        .then(\r\n            response => {\r\n                this.setState({allTags: response.data});\r\n            }\r\n        )\r\n    }\r\n\r\n    deleteNews(id) {\r\n        NewsDataService.deleteNews(id)\r\n        .then(\r\n            response => {\r\n                this.refreshNews();\r\n            }\r\n        )\r\n    }\r\n\r\n    showOneNews(id) {\r\n        // window.location.href = \"/news/\" + id;\r\n        this.props.history.push(`/news/` + id);\r\n    }  \r\n\r\n    search(){\r\n        let searchString = this.collectSearchDataToSearchString();\r\n        if(searchString){\r\n            NewsDataService.findNews(searchString)\r\n            .then(\r\n                response => {\r\n                    this.setState({news: response.data})\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    collectSearchDataToSearchString(){\r\n        const authorNameCriteriaName = \"author_name\";\r\n        const authorSurnameCriteriaName = \"author_surname\";\r\n        const tagCriteriaName = \"tags_name\";\r\n\r\n        let searchAuthorName = document.getElementById(\"searchAuthorNameField\").value;\r\n\r\n        let authorNameSearchCriteria = \"\";\r\n        if(searchAuthorName){\r\n            authorNameSearchCriteria = authorNameCriteriaName + \":\" + searchAuthorName;\r\n        }\r\n\r\n        let searchAuthorSurname = document.getElementById(\"searchAuthorSurnameField\").value;\r\n\r\n        let authorSurnameSearchCriteria = \"\";\r\n        if(searchAuthorSurname){\r\n            authorSurnameSearchCriteria = authorSurnameCriteriaName + \":\" + searchAuthorSurname;\r\n        }\r\n\r\n        let selectTagFieldValue = document.getElementById(\"tagsSelectField\").childNodes; \r\n\r\n        let selectedTags = [];\r\n        for(var i=0; i<selectTagFieldValue.length; i++){\r\n            if(selectTagFieldValue[i].selected){\r\n                selectedTags.push(selectTagFieldValue[i].textContent);\r\n            }\r\n        }\r\n\r\n        let tagsSearchCriteria = \"\";\r\n        if(selectedTags.length > 0){\r\n            tagsSearchCriteria = tagCriteriaName + \":\" + selectedTags[0];\r\n        }\r\n        for(var j=1; j<selectedTags.length; j++){\r\n            tagsSearchCriteria = tagsSearchCriteria + \",\" + tagCriteriaName + \":\" + selectedTags[j];\r\n        }\r\n\r\n        let searchString = \"\";\r\n\r\n        if(authorNameSearchCriteria){\r\n            searchString = searchString + authorNameSearchCriteria;\r\n        }\r\n\r\n        if(authorSurnameSearchCriteria){\r\n            if(searchString){\r\n                searchString = searchString + \",\" + authorSurnameSearchCriteria;\r\n            } else {\r\n                searchString = searchString + authorSurnameSearchCriteria;\r\n            }\r\n        }\r\n\r\n        if(tagsSearchCriteria){\r\n            if(searchString){\r\n                searchString = searchString + \",\" + tagsSearchCriteria;\r\n            } else {\r\n                searchString = searchString + tagsSearchCriteria;\r\n            }\r\n        }\r\n\r\n        if(searchString){\r\n            return \"?search=\" + searchString;\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const renderAllTagsList = this.state.allTags.map(t => {\r\n            return(\r\n                <option value={t.id}>{t.name}</option>\r\n            )\r\n        })\r\n\r\n        const renderNewsCards = this.state.news.map(n => {\r\n            return(\r\n                <NewsCardShort\r\n                newsId={n.id}\r\n                newsTitle={n.title} \r\n                newsST={n.shortText} \r\n                newsCrDate={n.creationDate} \r\n                newsAuthor={n.author}                \r\n                newsTags={n.tags}\r\n                deleteClick={() => this.deleteNews(n.id)}\r\n                readClick={() => this.showOneNews(n.id)}\r\n                toNewsListClick={() => this.showNewsList()}\r\n                deleteClick={() => this.deleteNews(n.id)}\r\n                t = {this.props.t}\r\n                />\r\n            )\r\n        })  \r\n     \r\n\t\treturn(\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-1\"></div>\r\n                        <div className=\"col-10\">\r\n                            <div className=\"container\">\r\n\r\n                                <div className=\"row align-items-center\">\r\n                                    <div className=\"col-10\">\r\n                                        <div className=\"input-group mb-3 w-100 my-3\">\r\n                                            <input id=\"searchAuthorNameField\" type=\"text\" className=\"form-control\" placeholder={this.props.t(\"new_author_name\")} aria-describedby=\"button-addon2\"/>\r\n                                            <input id=\"searchAuthorSurnameField\" type=\"text\" className=\"form-control\" placeholder={this.props.t(\"new_author_surname\")} aria-describedby=\"button-addon2\"/>\r\n                                        </div>\r\n                                        <select multiple id=\"tagsSelectField\" className=\"form-control\" size=\"2\">\r\n                                            {renderAllTagsList}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"col-2 align-self-center\">\r\n                                        <button className=\"btn btn-outline-primary btn-block\" type=\"button\" id=\"buttonSearch\" onClick={() => this.collectSearchDataToSearchString()}>{this.props.t(\"search\")}</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            {renderNewsCards}\r\n                        </div>\r\n                        <div className=\"col-1\"></div>\r\n                    </div>\r\n                </div>\r\n              \r\n            </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NewsContainer"]},"metadata":{},"sourceType":"module"}